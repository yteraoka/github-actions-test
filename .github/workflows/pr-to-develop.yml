name: dev 環境への deploy

#run-name: "${{ github.workflow }} by @${{ github.actor }} (${{ github.ref }})"

on:
  workflow_dispatch:

  pull_request:
    types: [opened, synchronize, reopened, labeled] # label を外した時は `unlabeled`
    branches:
      - develop

  push:
    branches:
      - develop

concurrency:
  group: deploy-develop
  cancel-in-progress: false

jobs:
  debug1:
    runs-on: ubuntu-latest
    steps:
      - name: dump variables
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "${GITHUB_CONTEXT}"

  test:
    # 手動実行の場合は実行しない
    if: ${{ github.event_name != 'workflow_dispatch' }}
    name: test
    uses: ./.github/workflows/reusable-test.yml

  gentag:
    # Pull Request の close 時は merge された場合だけ実行
    #if: ${{ github.event.pull_request.state != 'closed' || github.event.pull_request.merged == true }}
    name: Generate image tag
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag-name }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: "asia-docker.pkg.dev/myproject/myrepo/myimage"
          tags: |
            type=ref,priority=1200,event=tag
            type=ref,event=pr
            type=sha,priority=1100

      - name: output tag name
        id: image-tag
        run: |
          echo "step 1"
          echo "tag-name=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT

  deploy-review:
    name: PR Review 環境の deploy
    runs-on: ubuntu-latest
    needs:
      - test
      - gentag
    if: contains(github.event.pull_request.labels.*.name, 'PReview')
    steps:
      - run: |
          echo "Doing PR Review deploy"

  deploy:
    name: dev 環境への deploy
    runs-on: ubuntu-latest
    needs:
      - test
      - gentag
    steps:
      - run: |
          echo "deploy 中..."
          sleep 1
          echo "deploy 中..."
          sleep 1
          echo "deploy 中..."
          sleep 1
          echo "deploy 完了"
          #exit 1

  debug2:
    name: debug 2
    runs-on: ubuntu-latest
    needs:
      - gentag
      - deploy
    if: ${{ failure() }}
    steps:
      - run: |
          echo "debug"

  cleanup:
    name: cleanup
    runs-on: ubuntu-latest
    needs:
      - test
      - gentag
      - deploy
    steps:
      - name: print image-tag
        run: |
          echo "${{ needs.gentag.outputs.image-tag }}"
      - run: |
          echo "後片付け中"
          sleep 2
          echo "後片付け中"
          sleep 2
          echo "後片付け中"
          sleep 2
          echo "後片付け中"
          sleep 2
          echo "後片付け中"
          sleep 2
          echo "完了"
